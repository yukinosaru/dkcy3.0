import * as React from 'react';
import { SimpleTagPropsT } from '../Base/simpleTag';
export declare type ElevationPropsT = {
    /** A number from 0 - 24 for different levels of elevation */
    z: number | string;
    /** Allows for smooth transitions between elevations when the z value changes. */
    transition?: boolean;
} & SimpleTagPropsT;
declare const Elevation_base: {
    new <P>(props: any, context?: any): {
        render(): React.ReactElement<any> | null;
        setState<K extends never>(state: {} | ((prevState: Readonly<{}>, props: any) => {} | Pick<{}, K> | null) | Pick<{}, K> | null, callback?: (() => void) | undefined): void;
        forceUpdate(callBack?: (() => void) | undefined): void;
        props: Readonly<{
            children?: React.ReactNode;
        }> & Readonly<any>;
        state: Readonly<{}>;
        context: any;
        refs: {
            [key: string]: React.ReactInstance;
        };
    };
    displayName: string;
    defaultProps: {
        tag: string | React.ComponentClass<any> | React.StatelessComponent<any>;
        constructor: Function;
        toString(): string;
        toLocaleString(): string;
        valueOf(): Object;
        hasOwnProperty(v: string | number | symbol): boolean;
        isPrototypeOf(v: Object): boolean;
        propertyIsEnumerable(v: string | number | symbol): boolean;
    };
    isSimpleTag: boolean;
};
/**
 * The Elevation Component
 */
export declare class Elevation extends Elevation_base<ElevationPropsT> {
    static displayName: string;
    render(): React.ReactElement<any> | null;
}
export default Elevation;
