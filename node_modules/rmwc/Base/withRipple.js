'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withRipple = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _Ripple = require('../Ripple');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * HOC that adds ripples to any component
 */
var withRipple = function withRipple() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      defaultUnbounded = _ref.unbounded,
      _ref$surface = _ref.surface,
      defaultSurface = _ref$surface === undefined ? true : _ref$surface;

  return function (Component) {
    var _class, _temp;

    return _temp = _class = function (_React$Component) {
      _inherits(_class, _React$Component);

      function _class() {
        _classCallCheck(this, _class);

        return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
      }

      _createClass(_class, [{
        key: 'render',
        value: function render() {
          var _props = this.props,
              ripple = _props.ripple,
              rest = _objectWithoutProperties(_props, ['ripple']);

          if (ripple && !rest.cssOnly) {
            return React.createElement(
              _Ripple.Ripple,
              Object.assign({}, rest, {
                unbounded: rest.unbounded || defaultUnbounded,
                surface: rest.surface || defaultSurface
              }),
              React.createElement(Component, rest)
            );
          }

          return React.createElement(Component, rest);
        }
      }]);

      return _class;
    }(React.Component), Object.defineProperty(_class, 'displayName', {
      enumerable: true,
      writable: true,
      value: 'withRipple(' + (Component.displayName || 'Unknown') + ')'
    }), Object.defineProperty(_class, 'defaultProps', {
      enumerable: true,
      writable: true,
      value: {
        ripple: true
      }
    }), _temp;
  };
};
exports.withRipple = withRipple;
